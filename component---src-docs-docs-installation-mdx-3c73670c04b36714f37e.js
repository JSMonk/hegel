(this.webpackJsonp=this.webpackJsonp||[]).push([[13],{1328:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return p}));n(16),n(4),n(3),n(1),n(12),n(11),n(22);var a=n(57),o=n(63);n(36);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/docs/installation.mdx"}});var b={_frontmatter:r},c=o.a;function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(c,l({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"installation"},"Installation"),Object(a.b)("hr",null),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Step 1"),": check your ",Object(a.b)("a",l({parentName:"p"},{href:"https://nodejs.org/en/"}),"Node.js")," version:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-bash"}),"$ node -v\nv12.0.0\n")),Object(a.b)("p",null,"Hegel was developed for current LTS version of ",Object(a.b)("a",l({parentName:"p"},{href:"https://nodejs.org/en/"}),"Node.js (12.16.1)"),". So, you need to have at least 12 version."),Object(a.b)("p",null,"If you have less than 12 version of ",Object(a.b)("a",l({parentName:"p"},{href:"https://nodejs.org/en/"}),"Node.js")," you may change it to 12 or latest by ",Object(a.b)("a",l({parentName:"p"},{href:"https://github.com/nvm-sh/nvm"}),Object(a.b)("inlineCode",{parentName:"a"},"nvm")),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Step 2"),": install ",Object(a.b)("inlineCode",{parentName:"p"},"@hegel/cli")," with npm globally or locally:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# globally\n$ npm install -g @hegel/cli\n\n# locally\n$ npm install -D @hegel/cli\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Finally"),". You already can use it into your JavaScript project:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# globally\n$ hegel\nNo errors!\n\n# locally\n$ npx hegel\nNo errors!\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Hegel has a zero-configuration, but if you want to change settings see ",Object(a.b)("a",l({parentName:"p"},{href:"https://hegel.js.org/docs/configuration"}),"Configuration Section"),".")),Object(a.b)("h2",{id:"setup-project"},"Setup Project"),Object(a.b)("p",null,"Also you need to setup a compiler which will strip away Hegel types. The same as Flow, you can choose between ",Object(a.b)("a",l({parentName:"p"},{href:"https://babeljs.io/"}),"Babel")," and ",Object(a.b)("a",l({parentName:"p"},{href:"https://www.npmjs.com/package/flow-remove-types"}),"flow-remove-types"),"."),Object(a.b)("h3",{id:"babel"},"Babel"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-bash"}),"$ npm i -D @babel/core @babel/cli @babel/preset-flow\n")),Object(a.b)("p",null,"After that you need to create a .babelrc file at the root of your project with next content:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-json"}),'{\n  "presets": [["@babel/preset-flow", { "all": true }]]\n}\n')),Object(a.b)("p",null,"Now you can run it manualy:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-bash"}),"$ npx babel directory_with_your_project_files/ -- -d compilation_destination_directory\n")),Object(a.b)("p",null,"Or you can add script inside your ",Object(a.b)("inlineCode",{parentName:"p"},"package.json")," ",Object(a.b)("inlineCode",{parentName:"p"},"scripts")," section:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-json"}),'{\n  "scripts": {\n    "build": "babel directory_with_your_project_files/ -d compilation_destination_directory/",\n  }\n}\n')),Object(a.b)("h3",{id:"flow-remove-types"},"Flow Remove Types"),Object(a.b)("p",null,"Install ",Object(a.b)("inlineCode",{parentName:"p"},"flow-remove-types"),":"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-bash"}),"$ npm i -D flow-remove-types\n")),Object(a.b)("p",null,"And add next script inside your ",Object(a.b)("inlineCode",{parentName:"p"},"package.json")," ",Object(a.b)("inlineCode",{parentName:"p"},"scripts")," section:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-json"}),'{\n  "scripts": {\n    "build": "flow-remove-types directory_with_your_project_files/ --out-dir compilation_destination_directory/ --all",\n  }\n}\n')),Object(a.b)("p",null,"And run it by:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-bash"}),"$ npm run build\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},Object(a.b)("a",l({parentName:"p"},{href:"https://babeljs.io/setup"}),'"More about Babel setup"'))))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/docs/installation.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-docs-installation-mdx-3c73670c04b36714f37e.js.map